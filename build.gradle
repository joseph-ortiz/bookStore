plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.flywaydb.flyway" version '9.8.1'
	id "org.checkerframework" version "0.6.25"
}

apply plugin: 'jacoco'

group = 'com.weCode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


jar {
    manifest {
        attributes 'Implementation-Title': 'book Store',
                   'Implementation-Version': version,
                   'Main-Class': 'com.weCode.bookStore.BookStoreApplication'
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core:9.15.2'
	implementation 'org.modelmapper:modelmapper:2.3.9'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.assertj:assertj-core'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
		}
	}
}
test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification


flyway {
    url = 'jdbc:h2:mem:testdb'
    user = 'sa'
}